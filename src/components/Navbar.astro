---
import { Image } from "astro:assets";
import saltWhite from "../assets/salt white.png";
const currentPath = Astro.url.pathname;
---

<nav class="navbar" role="navigation" aria-label="Main">
  <div class="navbar__inner">
    <a class="navbar__brand" href="/">
      <Image
        class="navbar__logo"
        src={saltWhite}
        alt="Salt logo"
        width={32}
        height={32}
        draggable={false}
      />
      <span class="navbar__brand-text">salt</span>
    </a>

    <button
      class="navbar__toggle"
      type="button"
      aria-controls="navbar-menu"
      aria-expanded="false"
      aria-label="Toggle navigation"
    >
      <span class="navbar__toggle-bar"></span>
      <span class="navbar__toggle-bar"></span>
      <span class="navbar__toggle-bar"></span>
    </button>

    <div class="navbar__menu-wrapper" id="navbar-menu">
      <ul class="navbar__menu">
        <li class="navbar__item">
          <a
            class="navbar__link"
            href="/"
            aria-current={currentPath === "/" ? "page" : undefined}>Home</a
          >
        </li>
        <li class="navbar__item">
          <a class="navbar__link" href="/about">About</a>
        </li>
        <li class="navbar__item">
          <a class="navbar__link" href="/projects">Portfolio</a>
        </li>
        <li class="navbar__item">
          <a class="navbar__link" href="/contact">Links</a>
        </li>
      </ul>
    </div>
  </div>
</nav>

<script>
  const toggleBtn = document.querySelector(
    ".navbar__toggle"
  ) as HTMLButtonElement | null;
  const menuWrapper = document.getElementById(
    "navbar-menu"
  ) as HTMLDivElement | null;

  if (toggleBtn && menuWrapper) {
    const setOpen = (open: boolean) => {
      toggleBtn.setAttribute("aria-expanded", String(open));
      menuWrapper.classList.toggle("is-open", open);
      menuWrapper.setAttribute("aria-hidden", String(!open));
      document.body.classList.toggle("navbar-open", open);
    };

    const onToggle = (e: MouseEvent) => {
      e.stopPropagation();
      const open = toggleBtn.getAttribute("aria-expanded") !== "true";
      setOpen(open);
      if (open) {
        document.addEventListener("click", onDocClick);
        document.addEventListener("keydown", onKey);
      } else {
        document.removeEventListener("keydown", onKey);
        document.removeEventListener("click", onDocClick);
      }
    };

    const onDocClick = (e: MouseEvent) => {
      const t = e.target as EventTarget | null;
      if (t instanceof Node && !menuWrapper.contains(t) && t !== toggleBtn) {
        setOpen(false);
        document.removeEventListener("keydown", onKey);
        document.removeEventListener("click", onDocClick);
      }
    };

    const onKey = (e: KeyboardEvent) => {
      if (e.key === "Escape") {
        setOpen(false);
        document.removeEventListener("keydown", onKey);
        document.removeEventListener("click", onDocClick);
      }
    };

    toggleBtn.addEventListener("click", onToggle);
  }
</script>
